// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Sgb.Data.Data;

#nullable disable

namespace Sgb.Data.Migrations
{
    [DbContext(typeof(ContextBvs))]
    [Migration("20220729114434_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Sgb.Domain.Entities.CompradorAssociado.Associado", b =>
                {
                    b.Property<Guid>("CadastroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("CPF")
                        .HasMaxLength(14)
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataDaParceria")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Fazenda")
                        .IsRequired()
                        .HasMaxLength(180)
                        .HasColumnType("character varying(180)");

                    b.Property<Guid>("IdComprador")
                        .HasColumnType("uuid");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.HasKey("CadastroId");

                    b.HasIndex("IdComprador");

                    b.ToTable("Associados", (string)null);
                });

            modelBuilder.Entity("Sgb.Domain.Entities.CompradorAssociado.Comprador", b =>
                {
                    b.Property<Guid>("CadastroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("CPF")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.HasKey("CadastroId");

                    b.ToTable("Compradores", (string)null);
                });

            modelBuilder.Entity("Sgb.Domain.Entities.Parceria.AlteracaoSaida", b =>
                {
                    b.Property<Guid>("BoiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Arroba")
                        .HasColumnType("numeric(7,2)");

                    b.Property<string>("Classificacao")
                        .HasColumnType("text");

                    b.Property<string>("CompraVenda")
                        .HasColumnType("text");

                    b.Property<Guid>("IdAssociado")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdComprador")
                        .HasColumnType("uuid");

                    b.Property<Guid>("InicioParceriaId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("PesoBruto")
                        .HasColumnType("numeric(7,2)");

                    b.Property<decimal?>("PesoMedioAlterado")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("RendimentoCarcaca")
                        .HasColumnType("numeric(7,2)");

                    b.Property<DateTime>("Saida")
                        .HasColumnType("date");

                    b.HasKey("BoiId");

                    b.HasIndex("IdAssociado");

                    b.HasIndex("IdComprador");

                    b.HasIndex("InicioParceriaId");

                    b.ToTable("Saidas", (string)null);
                });

            modelBuilder.Entity("Sgb.Domain.Entities.Parceria.InicioParceria", b =>
                {
                    b.Property<Guid>("BoiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Arroba")
                        .HasColumnType("numeric(7,2)");

                    b.Property<string>("Classificacao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CompraVenda")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DataInicioParceria")
                        .HasColumnType("date");

                    b.Property<Guid>("IdAssociado")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdComprador")
                        .HasColumnType("uuid");

                    b.Property<string>("Lote")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Origem")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal>("PesoBruto")
                        .HasColumnType("numeric(7,2)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<decimal>("RendimentoCarcaca")
                        .HasColumnType("numeric(7,2)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric(18,2)");

                    b.HasKey("BoiId");

                    b.HasIndex("IdAssociado");

                    b.HasIndex("IdComprador");

                    b.ToTable("Parcerias", (string)null);
                });

            modelBuilder.Entity("Sgb.Domain.Entities.CompradorAssociado.Associado", b =>
                {
                    b.HasOne("Sgb.Domain.Entities.CompradorAssociado.Comprador", "Comprador")
                        .WithMany("Associados")
                        .HasForeignKey("IdComprador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Comprador");
                });

            modelBuilder.Entity("Sgb.Domain.Entities.Parceria.AlteracaoSaida", b =>
                {
                    b.HasOne("Sgb.Domain.Entities.CompradorAssociado.Associado", "Associado")
                        .WithMany("AlteracaoSaidas")
                        .HasForeignKey("IdAssociado")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("Sgb.Domain.Entities.CompradorAssociado.Comprador", "Comprador")
                        .WithMany("AlteracaoSaidas")
                        .HasForeignKey("IdComprador")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("Sgb.Domain.Entities.Parceria.InicioParceria", "InicioParceria")
                        .WithMany("AlteracaoSaidas")
                        .HasForeignKey("InicioParceriaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Associado");

                    b.Navigation("Comprador");

                    b.Navigation("InicioParceria");
                });

            modelBuilder.Entity("Sgb.Domain.Entities.Parceria.InicioParceria", b =>
                {
                    b.HasOne("Sgb.Domain.Entities.CompradorAssociado.Associado", "Associado")
                        .WithMany("InicioParcerias")
                        .HasForeignKey("IdAssociado")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Sgb.Domain.Entities.CompradorAssociado.Comprador", "Comprador")
                        .WithMany("InicioParcerias")
                        .HasForeignKey("IdComprador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Associado");

                    b.Navigation("Comprador");
                });

            modelBuilder.Entity("Sgb.Domain.Entities.CompradorAssociado.Associado", b =>
                {
                    b.Navigation("AlteracaoSaidas");

                    b.Navigation("InicioParcerias");
                });

            modelBuilder.Entity("Sgb.Domain.Entities.CompradorAssociado.Comprador", b =>
                {
                    b.Navigation("AlteracaoSaidas");

                    b.Navigation("Associados");

                    b.Navigation("InicioParcerias");
                });

            modelBuilder.Entity("Sgb.Domain.Entities.Parceria.InicioParceria", b =>
                {
                    b.Navigation("AlteracaoSaidas");
                });
#pragma warning restore 612, 618
        }
    }
}
